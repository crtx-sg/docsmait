<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="5" skipped="4" tests="22" time="3.973" timestamp="2025-09-02T10:55:17.124269+00:00" hostname="VMI-MI17001-New"><testcase classname="api.test_authentication.TestAuthentication" name="test_signup_new_user" time="0.373" /><testcase classname="api.test_authentication.TestAuthentication" name="test_signup_password_mismatch" time="0.003" /><testcase classname="api.test_authentication.TestAuthentication" name="test_login_valid_user" time="0.505" /><testcase classname="api.test_authentication.TestAuthentication" name="test_login_invalid_credentials" time="0.006" /><testcase classname="api.test_authentication.TestAuthentication" name="test_get_current_user" time="0.251" /><testcase classname="api.test_authentication.TestAuthentication" name="test_get_current_user_no_token" time="0.002"><failure message="assert 403 == 401&#10; +  where 403 = &lt;Response [403]&gt;.status_code">api/test_authentication.py:96: in test_get_current_user_no_token
    assert response.status_code == 401
E   assert 403 == 401
E    +  where 403 = &lt;Response [403]&gt;.status_code</failure></testcase><testcase classname="api.test_authentication.TestAuthentication" name="test_get_current_user_invalid_token" time="0.002" /><testcase classname="api.test_authentication.TestAuthentication" name="test_signup_duplicate_email" time="0.004" /><testcase classname="api.test_authentication.TestAuthentication" name="test_token_expiration_format" time="0.532" /><testcase classname="api.test_endpoints.TestCoreEndpoints" name="test_health_endpoint" time="0.004"><skipped type="pytest.skip" message="Health endpoint not implemented">/home/sganesh/crtx/docsmait/tests/api/test_endpoints.py:21: Health endpoint not implemented</skipped></testcase><testcase classname="api.test_endpoints.TestCoreEndpoints" name="test_settings_endpoint" time="0.002" /><testcase classname="api.test_endpoints.TestCoreEndpoints" name="test_api_docs_endpoint" time="0.002" /><testcase classname="api.test_endpoints.TestCoreEndpoints" name="test_openapi_json" time="0.136" /><testcase classname="api.test_endpoints.TestProjectEndpoints" name="test_get_projects_unauthenticated" time="0.027"><failure message="assert 200 == 401&#10; +  where 200 = &lt;Response [200]&gt;.status_code">api/test_endpoints.py:64: in test_get_projects_unauthenticated
    assert response.status_code == 401
E   assert 200 == 401
E    +  where 200 = &lt;Response [200]&gt;.status_code</failure></testcase><testcase classname="api.test_endpoints.TestProjectEndpoints" name="test_get_projects_authenticated" time="0.268" /><testcase classname="api.test_endpoints.TestProjectEndpoints" name="test_create_project" time="0.277"><failure message="AssertionError: Expected 201, got 200: {&quot;success&quot;:true,&quot;project_id&quot;:&quot;aa2a10cf-bb8e-4a75-836e-45b993c166c3&quot;,&quot;message&quot;:&quot;Project created successfully&quot;}&#10;assert 200 == 201&#10; +  where 200 = &lt;Response [200]&gt;.status_code">api/test_endpoints.py:80: in test_create_project
    assert_docsmait.assert_api_success(response, 201)
conftest.py:202: in assert_api_success
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
E   AssertionError: Expected 201, got 200: {"success":true,"project_id":"aa2a10cf-bb8e-4a75-836e-45b993c166c3","message":"Project created successfully"}
E   assert 200 == 201
E    +  where 200 = &lt;Response [200]&gt;.status_code</failure></testcase><testcase classname="api.test_endpoints.TestProjectEndpoints" name="test_get_single_project" time="0.252"><skipped type="pytest.skip" message="Cannot create project for testing">/home/sganesh/crtx/docsmait/tests/api/test_endpoints.py:99: Cannot create project for testing</skipped></testcase><testcase classname="api.test_endpoints.TestProjectEndpoints" name="test_update_project" time="0.247"><skipped type="pytest.skip" message="Cannot create project for testing">/home/sganesh/crtx/docsmait/tests/api/test_endpoints.py:120: Cannot create project for testing</skipped></testcase><testcase classname="api.test_endpoints.TestProjectEndpoints" name="test_delete_project" time="0.252"><skipped type="pytest.skip" message="Cannot create project for testing">/home/sganesh/crtx/docsmait/tests/api/test_endpoints.py:144: Cannot create project for testing</skipped></testcase><testcase classname="api.test_endpoints.TestProjectEndpoints" name="test_get_nonexistent_project" time="0.247" /><testcase classname="api.test_endpoints.TestDocumentEndpoints" name="test_get_documents_authenticated" time="0.248"><failure message="AssertionError: Expected 200, got 404: {&quot;detail&quot;:&quot;Not Found&quot;}&#10;assert 404 == 200&#10; +  where 404 = &lt;Response [404]&gt;.status_code">api/test_endpoints.py:174: in test_get_documents_authenticated
    assert_docsmait.assert_api_success(response)
conftest.py:202: in assert_api_success
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
E   AssertionError: Expected 200, got 404: {"detail":"Not Found"}
E   assert 404 == 200
E    +  where 404 = &lt;Response [404]&gt;.status_code</failure></testcase><testcase classname="api.test_endpoints.TestDocumentEndpoints" name="test_create_document" time="0.239"><failure message="AssertionError: Expected 201, got 404: {&quot;detail&quot;:&quot;Not Found&quot;}&#10;assert 404 == 201&#10; +  where 404 = &lt;Response [404]&gt;.status_code">api/test_endpoints.py:188: in test_create_document
    assert_docsmait.assert_api_success(response, 201)
conftest.py:202: in assert_api_success
    assert response.status_code == expected_status, f"Expected {expected_status}, got {response.status_code}: {response.text}"
E   AssertionError: Expected 201, got 404: {"detail":"Not Found"}
E   assert 404 == 201
E    +  where 404 = &lt;Response [404]&gt;.status_code</failure></testcase></testsuite></testsuites>